<div class="relative transition-all bg-secondary max-h-dvh overflow-hidden bg-base">
  <!-- Canvas background bg-[#fdf6e3]-->
  <canvas phx-update="ignore" id="canvas" class="fixed w-full h-full bg-inherit select-none"></canvas>
  <canvas
    :if={@outershell && @outershell.resp}
    phx-update="ignore"
    id="outercanvas"
    class={[
      "fixed z-10 w-full h-full bg-black/50 select-none",
      !@outershell && "pointer-events-none"
    ]}
  >
  </canvas>
  <canvas
    phx-update="ignore"
    id="ephemeralcanvas"
    class="fixed z-15 w-full h-full bg-transparent pointer-events-none select-none"
  >
  </canvas>
  
<!-- Left Coder pane container -->
  <div class="relative left-0 z-20 w-[30ch] h-screen pl-2 pt-2 overflow-y-hidden pointer-events-none  scrollbar-hide">
    <!-- Function Marks -->
    <div class="flex justify-start space-x-0.5 pb-[3px]">
      <div class="fixed select-none flex pointer-events-auto caret-[#a0ea00]">
        <!-- Example bookmarks -->
        <div
          class="px-2 font-mono text-xs transition duration-200 rounded  cursor-pointer focus:outline-none  border-r-2 border-accent/50 text-primary hover:bg-accent/50 hover:text-primary-content"
          phx-click="seeTurtle"
        >
         <span class="font-paperlang inline">~</span>
        </div>
        <div id="tabs" class="flex items-center" phx-update="ignore">
          <div
          :for={%{"value" => value} <- [%{"value"=> "Papert"}]}
          data-alive
          data-tab-id="root"
          class="tab-instance animate-fade select-none hidden pl-1 pr-2 font-mono text-xs transition-all duration-200  border-r-1 focus-within:outline-none text-primary-content rounded-r-lg hover:border-r-2 hover:border-primary hover:text-accent-content border-accent group flex items-center  data-alive:border-accent-content data-alive:border-accent-content data-alive:border-b-1"
          id="tab-scaffold-root"
          ondblclick="const input=this.querySelector('input');input.disabled=false;input.focus();"
        >
          <input
            type="text"
            id={"tab-#{value}"}
            value={value}
            data-original={value}
            class="bg-transparent hover:bg-base-100 pointer-events-none hover:bg-base-100/20 focus:bg-base-100/30 border-transparent focus:border-accent/50 border-b transition-all duration-200 outline-none text-primary-content focus:text-base-content -mr-1 placeholder-primary-content/60 text-xs min-w-[1ch] max-w-[7ch] w-full group-hover:bg-base-100/10"
            placeholder="name"
            onfocus="var value = this.value; this.value = null; this.value = value;this.style.pointerEvents='auto'"
            phx-update="ignore"
            disabled
            onblur="this.disabled=true;this.style.pointerEvents='none';this.closest('[id^=\'tab-scaffold\']').style.pointerEvents='auto';this.style.width=Math.max(this.value.length||this.placeholder.length,1)+'ch';this.setSelectionRange(0, 0);"
            onkeydown="if(event.key==='Enter')this.blur();if(event.key==='Escape'){this.value=this.dataset.original;this.blur()}"
            oninput="this.style.width=Math.max(this.value.length||this.placeholder.length,1)+1+'ch'"
          />
          <button
            class="close ml-1 pl-1 pointer-events-auto -mr-1 w-1 h-3 opacity-0 group-hover:w-3 group-hover:opacity-60 cursor-pointer hover:opacity-100 transition-opacity duration-200 flex items-center justify-center text-red-500/70 hover:text-red-500"
            title="Close tab"
            onclick="event.stopPropagation()"
          >
            <svg class="w-2 h-2" viewBox="0 0 12 12" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 3l6 6M9 3l-6 6"/>
            </svg>
          </button>
        </div>

<script>
  window.addEventListener('DOMContentLoaded', () => {
                    document.querySelectorAll('input[id^="tab-"]').forEach(input => {input.style.width=Math.max(input.value.length||input.placeholder.length,1)+'ch';});
                  });
</script>
          </div>
        <!-- New Tab Creator Button -->
<button
  class="px-1 ml-1 font-mono text-xs transition-all duration-300 focus:outline-none text-primary-content rounded-r-lg hover:text-primary hover:border-r-2 hover:border-accent active:border-primary transform  cursor-copy group"
  phx-click={JS.dispatch("phx:opBuffer", detail: %{op: "add"})}
>
  <span class="inline transition-all duration-300 group-hover:scale-110">+</span>
</button>

      </div>
    </div>
    <!-- Editor -->
    <div
      phx-update="ignore"
      id="runenv"
      class="mt-4 mb-6 rounded-sm pointer-events-auto dark-scrollbar [scrollbar-width:none] [&::-webkit-scrollbar]:hidden cursor-text bg-amber-600/5 border-amber-600/20 h-[88dvh]"
    >
      <div phx-click="flipWell">
        <.folders
          :if={false}
          class="absolute top-5 right-6 w-5 h-5  fill-primary/50 hover:fill-amber-400 cursor-pointer"
        />
      </div>
      <div class="relative z-10">
        <.slider slider_value="50" />
      </div>
      <textarea
        id="your-buffer"
        class="relative rounded-sm pointer-events-auto cursor-text bg-amber-600/5 border-none h-full"
        phx-hook="Shell"
        data-target="canvas"
      />
    </div>
    <!-- Code Output -->
    <div
      phx-update="ignore"
      id="output"
      class="fixed bottom-0 overflow-y-auto font-mono border-none text-primary left-2"
    >
    </div>
  </div>
</div>

<!-- Right Editor -->
<div
  id="rightpane"
  class="fixed top-0 right-0 z-20 flex flex-col  h-screen p-4 pointer-events-none "
  <!--
  Session
  --
>
  <div id="sessionbox">
    <div :if={!@session.name} class="relative group w-60 max-w-[calc(100vw-2rem)]">
      <!-- Login Link Button -->
      <.link
        navigate={~p"/welcome"}
        class="relative px-4 py-2 ml-10 font-mono text-sm transition-colors duration-300 pointer-events-auto text-amber-400/80 hover:text-amber-300"
      >
        <span class="relative z-10 text-end">Enter the Shell</span>
        <!-- Animated underscore cursor -->
        <span class="inline-block w-2 h-0.5 ml-1 bg-amber-400 animate-flicker">_</span>
        
<!-- Decorative corners (smaller size for subtlety) -->
        <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-primary-content">
        </div>
        <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-primary-content">
        </div>
        <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-primary-content">
        </div>
        <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-primary-content">
        </div>
      </.link>
    </div>

    <div
      :if={@session.name}
      class="fixed font-mono right-4 text-primary bg-transparent  border border-none rounded px-2 py-1 w-1/2 max-w-xs"
    >
      <!-- Welcome message row -->
      <div class="flex items-center text-xs mb-1 border-b border-accent/50  pb-1 overflow-hidden">
        <span class="flex items-center">
          &gt; <%= gettext "welcome %{name} to⠀%{clan}'s shell", clan: to_titlecase(@clan), name: @session.name%>
          <span class="relative flex items-center ml-1">
            <span class="h-1.5 w-1.5 rounded-full bg-amber-500 animate-pulse"></span>
          </span>
        </span>
      </div>
      
<!-- Command keys row -->
      <div class="flex items-center justify-between">
        <div
          :if={@outershell && @outershell.resp}
          class="w-20 sm:w-32 lg:w-48 overflow-hidden whitespace-nowrap flex-shrink-1 sm:flex-shrink-0 flex items-center  text-xs mr-1 sm:mr-2 min-w-0"
        >
          <span class="text-amber-600 animate-marquee">
            <%= gettext "summoning @%{addr}'s code", addr: @outershell.resp %> ☄
          </span>
        </div>
        <!-- Empty spacer div with minimum width on small screens -->


  <!-- Command buttons always aligned to right and given prio -->
        <div class="flex flex-shrink-0 z-30 ml-auto cursor-pointer pointer-events-auto">
          <button
            :if={@sensei}
            id="endrecording"
            class="relative hidden w-8 h-8 border-2 border-primary/50  backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-manipulation"
            phx-click={
              JS.dispatch("phx:relayCamera", detail: %{command: "end_record"})
              |> JS.hide(to: "#endrecording")
              |> JS.show(to: "#startrecording")
            }
          >
            <.record class="w-5 h-5 animate-rotate transition-transform duration-700  fill-red-800 text-amber-400/50 hover:rotate-[-40deg]" />
          </button>

          <button
            :if={@sensei}
            id="startrecording"
            class="relative w-8 h-8 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-manipulation"
            phx-click={
              JS.dispatch("phx:relayCamera", detail: %{command: "start_record"})
              |> JS.hide(to: "#startrecording")
              |> JS.show(to: "#endrecording")
            }
          >
            <.record class="w-5 h-5 transition-transform duration-700  fill-amber-400 text-amber-400/50 hover:rotate-[-40deg]" />
          </button>
          <button
            class="relative w-8 h-8 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-primary touch-manipulation"
            phx-click={JS.dispatch("phx:relayCamera", detail: %{command: "center_camera"})}
          >
            <.centering class="w-7 h-7 transition-transform duration-700  fill-primary hover:rotate-[-40deg]" />
          </button>

          <button
            class="relative w-8 h-8 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-manipulation"
            phx-click={
              (@outershell &&
                 JS.dispatch("phx:outerkeepCanvas",
                   detail: %{"title" => @outershell.resp <> "'s " <> @outershell.title}
                 )) ||
                JS.dispatch("phx:selfkeepCanvas",
                  detail: %{"title" => @session.name <> "'s " <> @mytitle}
                )
            }
          >
            <.save class="w-4 h-4 duration-700  transition-transform duration-700  " />
          </button>

          <button
            class="relative w-8 h-8 border-1 border-accent fill-primary  backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-manipulation"
            phx-click="flipDeck"
          >
            <.manual class="w-6 h-6 transition-transform duration-700 rotate-[-60deg] cursor-help fill-primary hover:rotate-[-40deg]" />
          </button>
        </div>
        <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-primary-content">
        </div>
        <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-primary-content">
        </div>
        <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-primary-content">
        </div>
        <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-primary-content">
        </div>
      </div>
    </div>
  </div>

  <span
    :if={@outershell && @outershell.resp}
    id="outershell-head"
    class="fixed text-lg font-bold w-1/3 right-2 text-amber-200 top-36"
  >
    <%= gettext "@%{addr}'s code", addr: @outershell.resp %>
  </span>
  <div
    :if={@outershell}
    id="outerenv"
    phx-update="ignore"
    class="fixed w-1/3  overflow-y-scroll border rounded-lg pointer-events-auto h-1/2 top-32 right-4 bottom-4 bg-black/30 border-amber-600/20 dark-scrollbar scrollbar-hide my-12 rounded-sm pointer-events-auto cursor-text"
  >
    <button
      phx-click="seeTurtle"
      class="absolute z-10 flex items-center justify-center w-8 h-8 transition-all duration-300 transform border-2 rounded-full opacity-50 pointer-events-auto backdrop-blur-sm hover:scale-110 hover:bg-red-900/90 group hover:opacity-100 top-2 right-2  border-amber-600"
    >
      <!-- Base Crosshair -->
      <div class="absolute inset-0 flex items-center justify-center">
        <svg
          class="w-4 h-4 transition-colors text-red-600 group-hover:text-amber-300"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </div>
      <!-- Mechanical Cross Overlay -->
      <svg
        class="absolute inset-0 w-full h-full transition-opacity text-amber-600 opacity-30 group-hover:opacity-50"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="1"
      >
        <path d="M12 2v20M2 12h20" />
        <circle cx="12" cy="12" r="10" />
        <path d="M12 7v10M7 12h10" stroke-dasharray="2 2" />
      </svg>
    </button>
    <textarea
      phx-update="ignore"
      id="outershell"
      class="relative rounded-sm pointer-events-auto cursor-text bg-inherit border-none h-full"
      phx-hook="Shell"
      data-target="outercanvas"
    ></textarea>
  </div>

  <.deck active={@right == :deck} type={@deck} />
  <.memory_well
    :if={@right == :well}
    view="grid"
    memories={@disciples |> Enum.map(&elem(&1, 1))}
    page={1}
    total_pages={1}
  />
</div>

<%!-- Turtle viewing pane toggle icon --%>
<div
  id="paneflip"
  class="fixed z-50 -translate-x-1/2 pointer-events-auto  transition-transform duration-300 pointer-events-auto bottom-2 left-1/2"
  phx-hook="Sensei"
>
  <svg
    class={"z-60 w-6 h-6  text-primary/50 items-center flex  m-auto  rounded-lg backdrop-blur-sm transform transition-transform duration-300 hover:text-amber-400 cursor-pointer" <> if(@pane, do: " rotate-180", else: "")}
    phx-click="flipPane"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
  >
    <path d="M18 15l-6-6-6 6" />
  </svg>
</div>
<%!-- Turtle viewing pane --%>
<div
  :if={@pane}
  id="disciple_panels"
  phx-hook="DiscipleWindow"
  class="fixed bottom-0 pointer-events-none z-40 flex w-3/5 p-4 m-4 overflow-x-scroll transform -translate-x-1/2 rounded-md left-1/2 dark-scrollbar touch-pan-x overscroll-auto"
>
  <!-- Other people's turtles -->
  <div
    :for={{phx_ref, dis} <- @disciples |> Enum.sort_by(&elem(&1, 1).online_at, :desc)}
    class={"rounded-lg transition pb-4 pt-2 duration-500 ease-in-out animate-fade flex-shrink-0" <> is_main_focus(dis.phx_ref, @focused_phx_ref)}
  >
    <.icon
      :if={@sensei}
      name="hero-cursor-arrow-ripple"
      phx-click="toggle-focus"
      phx-value-disciple-phx_ref={phx_ref}
      class="cursor-pointer pointer-events-auto text-primary"
    />
    <div
      phx-click="seeTurtle"
      phx-throttle="1000"
      phx-value-addr={phx_ref}
      class={[
        "relative flex justify-center items-center h-32 lg:w-48 w-32 border rounded-md hover:border-primary",
        (Map.has_key?(dis, :meta) && "cursor-alias pointer-events-auto") ||
          "cursor-progress pointer-events-auto",
        (@outershell && @outershell.addr == phx_ref && "border-accent-content text-accent-content") ||
          "border-accent/50 text-accent"
      ]}
    >
      <div class="absolute font-mono text-sm tracking-wider rotate-0 select-none top-2 right-2">
        {dis.name}
      </div>

      <.droplet_loader
        :if={!Map.has_key?(dis, :meta)}
        class="size-10 fill-amber-600"
        loading="eager"
        decoding="sync"
      />
      <img
        :if={Map.has_key?(dis, :meta)}
        src={dis.meta.path}
        onerror="this.src='/images/turtlehead.png';"
        class="object-scale-down max-h-full m-auto"
        loading="eager"
        decoding="sync"
      />
    </div>
  </div>

  <div :if={@sensei} class="z-50 flex mb-2 pointer-events-auto">
    <.export />
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var el = document.getElementById('disciple_panels');
    if (el) {
      el.addEventListener('wheel', function(e) {
        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
          e.preventDefault();
          el.scrollLeft += e.deltaY;
        }
      }, { passive: false });
    }
  });
</script>

<style>
  /* Custom styles for editor width */
  #editor {
  width: 80ch; /* 80 characters width */
  }
</style>
