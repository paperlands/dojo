<div id="mathjax-hidden" style="visibility:hidden;position:absolute;top:-9999px;"></div>

<div class="touch-none">
  <!-- Canvas background bg-[#fdf6e3]-->
  <canvas phx-update="ignore" id="canvas" class="fixed w-full h-full select-none bg-inherit">
  </canvas>
  <canvas
    :if={@outershell && @outershell.resp}
    phx-update="ignore"
    id="outercanvas"
    class={[
      "fixed w-full h-full bg-black/50 select-none",
      !@outershell && "pointer-events-none"
    ]}
  >
  </canvas>
  <canvas
    phx-update="ignore"
    id="ephemeralcanvas"
    class="fixed w-full h-full bg-transparent pointer-events-none select-none"
  >
  </canvas>
</div>

<%!-- Second layer --%>
<div class="z-10 flex flex-col justify-between touch-none">
  <div class="flex justify-between h-[50vh] md:h-[60vh] lg:h-screen">
    <%!--! Left Code Editor --%>
    <div class="w-8/12 h-full md:w-6/12 lg:w-3/12" id="leftCodeEditor">
      <div>
        <!-- Left Coder pane container -->
        <div class="relative left-0 w-[30ch] pl-2 pt-2 overflow-y-hidden pointer-events-none  scrollbar-hide">
          <!-- Function Marks -->
          <div class="flex justify-start space-x-0.5 pb-[3px]">
            <div class="select-none flex pointer-events-auto caret-[#a0ea00]">
              <!-- Example bookmarks -->
              <div
                class="px-2 font-mono text-xs transition duration-200 border-r-2 rounded cursor-pointer focus:outline-none border-accent/50 text-primary hover:bg-accent/50 hover:text-primary-content"
                phx-click="seeTurtle"
              >
                <span class="inline font-paperlang">~</span>
              </div>
              <div id="tabs" class="flex items-center" phx-update="ignore">
                <div
                  :for={%{"value" => value} <- [%{"value" => "Papert"}]}
                  data-alive
                  data-tab-id="root"
                  class="flex items-center hidden pl-1 pr-2 font-mono text-xs transition-all duration-200 rounded-r-lg select-none tab-instance animate-fade border-r-1 focus-within:outline-none text-primary-content hover:border-r-2 hover:border-primary hover:text-accent-content border-accent group data-alive:border-accent-content data-alive:border-b-1"
                  id="tab-scaffold-root"
                  ondblclick="const input=this.querySelector('input');input.disabled=false;input.focus();"
                >
                  <input
                    type="text"
                    id={"tab-#{value}"}
                    value={value}
                    data-original={value}
                    class="bg-transparent hover:bg-base-100 pointer-events-none hover:bg-base-100/20 focus:bg-base-100/30 border-transparent focus:border-accent/50 border-b transition-all duration-200 outline-none text-primary-content focus:text-base-content -mr-1 placeholder-primary-content/60 text-xs min-w-[1ch] max-w-[7ch] w-full group-hover:bg-base-100/10"
                    placeholder="name"
                    onfocus="var value = this.value; this.value = null; this.value = value;this.style.pointerEvents='auto'"
                    phx-update="ignore"
                    disabled
                    onblur="this.disabled=true;this.style.pointerEvents='none';this.closest('[id^=\'tab-scaffold\']').style.pointerEvents='auto';this.style.width=Math.max(this.value.length||this.placeholder.length,1)+'ch';this.setSelectionRange(0, 0);"
                    onkeydown="if(event.key==='Enter')this.blur();if(event.key==='Escape'){this.value=this.dataset.original;this.blur()}"
                    oninput="this.style.width=Math.max(this.value.length||this.placeholder.length,1)+1+'ch'"
                  />
                  <button
                    class="flex items-center justify-center w-1 h-3 pl-1 ml-1 -mr-1 transition-opacity duration-200 opacity-0 cursor-pointer pointer-events-auto close group-hover:w-3 group-hover:opacity-60 hover:opacity-100 text-red-500/70 hover:text-red-500"
                    title="Close tab"
                    onclick="event.stopPropagation()"
                  >
                    <svg
                      class="w-2 h-2"
                      viewBox="0 0 12 12"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                    >
                      <path d="M3 3l6 6M9 3l-6 6" />
                    </svg>
                  </button>
                </div>

                <script>
                  window.addEventListener('DOMContentLoaded', () => {
                                    document.querySelectorAll('input[id^="tab-"]').forEach(input => {input.style.width=Math.max(input.value.length||input.placeholder.length,1)+'ch';});
                                  });
                </script>
              </div>
              <!-- New Tab Creator Button -->
              <button
                class="px-1 ml-1 font-mono text-xs transition-all duration-300 transform rounded-r-lg focus:outline-none text-primary-content hover:text-primary hover:border-r-2 hover:border-accent active:border-primary cursor-copy group"
                phx-click={JS.dispatch("phx:opBuffer", detail: %{op: "add"})}
              >
                <span class="inline transition-all duration-300 group-hover:scale-110">+</span>
              </button>
            </div>
          </div>
          <!-- Editor -->
          <div
            :if={@editor}
            phx-update="ignore"
            id="runenv"
            class="mt-4 mb-6 rounded-sm pointer-events-auto dark-scrollbar [scrollbar-width:none] [&::-webkit-scrollbar]:hidden cursor-text bg-amber-600/5 border-amber-600/20 h-[40dvh] md:h-[55dvh] lg:h-[88dvh] border-b border-accent/50"
          >
            <div phx-click="flipWell">
              <.folders
                :if={false}
                class="absolute w-5 h-5 cursor-pointer top-5 right-6 fill-primary/50 hover:fill-amber-400"
              />
            </div>
            <div class="relative z-30">
              <.slider slider_value="50" />
            </div>
            <textarea
              id="your-buffer"
              class="relative border-none rounded-sm pointer-events-auto cursor-text bg-amber-600/5"
              phx-hook="Shell"
              data-target="canvas"
            />
          </div>
          <!-- Code Output -->
          <div
            phx-update="ignore"
            id="output"
            class="fixed bottom-0 overflow-y-auto font-mono border-none text-primary"
          >
          </div>
        </div>
      </div>
    </div>

    <%!--! Desktop Sharing Panel --%>
    <div class="hidden w-7/12 lg:block lg:flex lg:flex-col lg:justify-end">
      <.sharing_panel
        pane={@pane}
        disciples={@disciples}
        sensei={@sensei}
        focused_phx_ref={@focused_phx_ref}
        outershell={@outershell}
      />
    </div>

    <%!--! Command Panel --%>
    <div class="flex flex-col items-end w-2/12 h-full p-4 items-right md:w-4/12 lg:w-4/12">
      <div id="sessionbox">
        <!-- Login Link Button -->
        <div :if={!@session.name} class="group w-60">
          <.link
            navigate={~p"/welcome"}
            class="relative px-4 py-2 ml-10 font-mono text-sm transition-colors duration-300 pointer-events-auto text-amber-400/80 hover:text-amber-300"
          >
            Enter the Shell
            <!-- Animated underscore cursor -->
            <span class="inline-block w-2 h-0.5 ml-1 bg-amber-400 animate-flicker">_</span>
            <!-- Decorative corners (smaller size for subtlety) -->
            <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-primary-content">
            </div>
            <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-primary-content">
            </div>
            <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-primary-content">
            </div>
            <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-primary-content">
            </div>
          </.link>
        </div>

        <%!-- Logged in command panel --%>
        <div
          :if={@session.name}
          class="relative px-3 py-2 font-mono bg-transparent rounded text-primary"
        >
          <!-- Welcome message row -->
          <div class="flex items-center pb-1 mb-1 overflow-hidden text-xs border-b border-accent/50">
            <span class="flex items-center">
              &gt; {gettext("welcome %{name} to⠀%{clan}'s shell",
                clan: to_titlecase(@clan),
                name: @session.name
              )}
              <span class="ml-1 h-1.5 w-1.5 rounded-full bg-amber-500 animate-pulse aspect-square">
              </span>
            </span>
          </div>
          <!-- Command keys row -->
          <div class="flex items-center justify-between">
            <%!-- Summoning text --%>
            <div
              :if={@outershell && @outershell.resp}
              class="flex items-center w-20 min-w-0 mr-1 overflow-hidden text-xs sm:w-32 lg:w-48 whitespace-nowrap flex-shrink-1 sm:flex-shrink-0 sm:mr-2"
            >
              <span class="text-amber-600 animate-marquee">
                {gettext("summoning @%{addr}'s code", addr: @outershell.resp)} ☄
              </span>
            </div>
            <!-- Command buttons always aligned to right and given prio -->
            <div class="z-20 flex flex-col flex-shrink-0 ml-auto cursor-pointer pointer-events-auto md:flex-row">
              <button
                :if={@sensei}
                id="endrecording"
                class=" hidden w-10 h-10 border-2 border-primary/50  backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 md:w-8 md:h-8 m-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-none"
                phx-click={
                  JS.dispatch("phx:relayCamera", detail: %{command: "end_record"})
                  |> JS.hide(to: "#endrecording")
                  |> JS.show(to: "#startrecording")
                }
              >
                <.record class="w-5 h-5 animate-rotate transition-transform duration-700  fill-red-800 text-amber-400/50 hover:rotate-[-40deg]" />
              </button>
              <button
                :if={@sensei}
                id="startrecording"
                class=" w-10 h-10 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 md:w-8 md:h-8 m-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-none"
                phx-click={
                  JS.dispatch("phx:relayCamera", detail: %{command: "start_record"})
                  |> JS.hide(to: "#startrecording")
                  |> JS.show(to: "#endrecording")
                }
              >
                <.record class="w-5 h-5 transition-transform duration-700  fill-amber-400 text-amber-400/50 hover:rotate-[-40deg]" />
              </button>
              <button
                class=" w-10 h-10 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 md:w-8 md:h-8 m-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-primary touch-none"
                phx-click={JS.dispatch("phx:relayCamera", detail: %{command: "center_camera"})}
              >
                <.centering class="w-7 h-7 transition-transform duration-700  fill-primary hover:rotate-[-40deg]" />
              </button>

              <button
                class=" w-10 h-10 border-1 border-accent backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 md:w-8 md:h-8 m-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-none"
                phx-click={
                  (@outershell &&
                     JS.dispatch("phx:outerkeepCanvas",
                       detail: %{"title" => @outershell.resp <> "'s " <> @outershell.title}
                     )) ||
                    JS.dispatch("phx:selfkeepCanvas",
                      detail: %{"title" => @session.name <> "'s " <> @mytitle}
                    )
                }
              >
                <.save class="w-4 h-4 transition-transform duration-700 " />
              </button>

              <button
                class=" w-10 h-10 border-1 border-accent fill-primary  backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 md:w-8 md:h-8 m-0.5 rounded-sm flex items-center justify-center hover:fill-primary active:border-amber-500 touch-none"
                phx-click="flipDeck"
              >
                <.manual class="w-6 h-6 transition-transform duration-700 rotate-[-60deg] cursor-help fill-primary hover:rotate-[-40deg]" />
              </button>
            </div>
          </div>
          <%!-- Decorative borders --%>
          <div class="absolute w-2 h-2 border-t border-l -top-0 -left-0 border-primary-content">
          </div>
          <div class="absolute w-2 h-2 border-t border-r -top-0 -right-0 border-primary-content">
          </div>
          <div class="absolute w-2 h-2 border-b border-l -bottom-0 -left-0 border-primary-content">
          </div>
          <div class="absolute w-2 h-2 border-b border-r -bottom-0 -right-0 border-primary-content">
          </div>
        </div>
      </div>
      <.deck active={@right == :deck} type={@deck} />
    </div>
  </div>

  <%!--! Mobile Sharing Panel --%>
  <div class="w-full mt-28 lg:hidden">
    <.sharing_panel
      pane={@pane}
      disciples={@disciples}
      sensei={@sensei}
      focused_phx_ref={@focused_phx_ref}
      outershell={@outershell}
    />
  </div>
</div>

<script>
  function toggleVisibility(id) {
    const el = document.getElementById(id);
    if (el.classList.contains('hidden')) {
      el.classList.remove('hidden');
      console.log("asd");
    } else {
      el.classList.add('hidden');
    }
  }
</script>

<%!-- ! ################################################### --%>
<%!-- ! ################################################### --%>
<%!-- ! ################################################### --%>

<!-- Right Editor -->
<div
  id="rightpane"
  class="fixed top-0 right-0 z-20 flex flex-col h-screen p-4 pointer-events-none "
  <!--
  Session
  --
>
  <span
    :if={@outershell && @outershell.resp}
    id="outershell-head"
    class="fixed w-1/3 text-lg font-bold right-2 text-amber-200 top-36"
  >
    {gettext("@%{addr}'s code", addr: @outershell.resp)}
  </span>
  <div
    :if={@outershell}
    id="outerenv"
    phx-update="ignore"
    class="fixed w-1/3 my-12 overflow-y-scroll border rounded-sm rounded-lg pointer-events-auto h-1/2 top-32 right-4 bottom-4 bg-black/30 border-amber-600/20 dark-scrollbar scrollbar-hide cursor-text"
  >
    <button
      phx-click="seeTurtle"
      class="absolute z-10 flex items-center justify-center w-8 h-8 transition-all duration-300 transform border-2 rounded-full opacity-50 pointer-events-auto backdrop-blur-sm hover:scale-110 hover:bg-red-900/90 group hover:opacity-100 top-2 right-2 border-amber-600"
    >
      <!-- Base Crosshair -->
      <div class="absolute inset-0 flex items-center justify-center">
        <svg
          class="w-4 h-4 text-red-600 transition-colors group-hover:text-amber-300"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </div>
      <!-- Mechanical Cross Overlay -->
      <svg
        class="absolute inset-0 w-full h-full transition-opacity text-amber-600 opacity-30 group-hover:opacity-50"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="1"
      >
        <path d="M12 2v20M2 12h20" />
        <circle cx="12" cy="12" r="10" />
        <path d="M12 7v10M7 12h10" stroke-dasharray="2 2" />
      </svg>
    </button>
    <textarea
      phx-update="ignore"
      id="outershell"
      class="relative h-full border-none rounded-sm pointer-events-auto cursor-text bg-inherit"
      phx-hook="Shell"
      data-target="outercanvas"
    ></textarea>
  </div>

  <.memory_well
    :if={@right == :well}
    view="grid"
    memories={@disciples |> Enum.map(&elem(&1, 1))}
    page={1}
    total_pages={1}
  />
</div>

<style>
  /* Custom styles for editor width */
  #editor {
  width: 80ch; /* 80 characters width */
  }
</style>
