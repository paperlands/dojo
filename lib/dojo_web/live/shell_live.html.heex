<div class="relative max-h-dvh overflow-hidden bg-black">
  <!-- Canvas background -->
  <canvas phx-update="ignore" id="canvas" class="fixed w-full h-full bg-inherit"></canvas>
  <canvas
    :if={@outershell && @outershell.resp}
    phx-update="ignore"
    id="outercanvas"
    class={[
      "fixed z-10 w-full h-full bg-black/50",
      !@outershell && "pointer-events-none"
    ]}
  >
  </canvas>
  
<!-- Left Coder pane container -->
  <div class="relative left-0 z-20 w-1/2 lg:w-1/3 h-screen pl-4 overflow-y-scroll shadow-lg pointer-events-none min-w-min scrollbar-hide">
    <!-- Function Marks -->
    <div class="flex justify-start space-x-0.5 py-1">
      <div class="fixed flex pointer-events-auto">
        <!-- Example bookmarks -->
        <div
          class="px-3 py-1 font-mono text-xs transition duration-200 rounded rounded-t-lg cursor-pointer focus:outline-none outline outline-1 outline-gray-500 text-brand hover:bg-amber-400 hover:text-black"
          phx-click="seeTurtle"
        >
          ~
        </div>
        <div
          :for={%{"value" => value} <- @myfunctions}
          class="px-3 py-1 font-mono text-xs transition duration-200 rounded rounded-t-lg cursor-pointer focus:outline-none outline outline-1 outline-gray-500 text-brand hover:bg-yellow-300"
          phx-click="seeTurtle"
          phx-value-function={value}
        >
          {value}
        </div>

      </div>
    </div>
    <!-- Editor -->
    <div
      phx-update="ignore"
      id="runenv"
      class="mt-8 rounded-sm pointer-events-auto cursor-text bg-amber-600/5 border-amber-600/20"
    >
      <div phx-click="flipWell">
      <.folders :if={false}  class="absolute top-5 right-6 w-5 h-5  fill-brand/50 hover:fill-amber-400 cursor-pointer" />
        </div>
      <div class="relative z-10">
        <.slider slider_value="50" />
      </div>
      <textarea id="your-buffer" class="rounded-sm pointer-events-auto cursor-text bg-inherit border-none" phx-hook="Shell"></textarea>
    </div>
    <!-- Code Output -->
    <div
      phx-update="ignore"
      id="output"
      class="fixed bottom-0 overflow-y-auto font-mono border-none text-brand left-2"
    >
    </div>
  </div>
</div>

<!-- Right Editor -->
<div
  id="rightpane"
  class="fixed top-0 right-0 z-20 flex flex-col  h-screen p-4 pointer-events-none "
  <!-- Session -->
  <div id="sessionbox" >
    <div :if={!@session.name} class="relative group w-60 max-w-[calc(100vw-2rem)]">
      <!-- Login Link Button -->
      <.link
        navigate={~p"/welcome"}
        class="relative px-4 py-2 ml-10 font-mono text-sm transition-colors duration-300 pointer-events-auto text-amber-400/80 hover:text-amber-300"
      >
        <span class="relative z-10 text-end">Enter the Shell</span>
        <!-- Animated underscore cursor -->
        <span class="inline-block w-2 h-0.5 ml-1 bg-amber-400 animate-flicker">_</span>
        
<!-- Decorative corners (smaller size for subtlety) -->
        <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-amber-500"></div>
        <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-amber-500">
        </div>
        <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-amber-500">
        </div>
        <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-amber-500">
        </div>
      </.link>
    </div>

    <div :if={@session.name} class="fixed font-mono right-4 text-amber-400 bg-transparent bg-opacity-80 border border-none rounded px-2 py-1 shadow-lg w-1/2 max-w-xs">
      <!-- Welcome message row -->
      <div class="flex items-center text-xs mb-1 border-b border-amber-800 pb-1 overflow-hidden">
        <span class="flex items-center">
          &gt; welcome {@session.name} to {to_titlecase(@clan)}'s shell
          <span class="relative flex items-center ml-1">
            <span class="h-1.5 w-1.5 rounded-full bg-amber-500 animate-pulse"></span>
          </span>
        </span>
      </div>

      <!-- Command keys row -->
      <div class="flex items-center justify-between">
          <div :if={@outershell && @outershell.resp} class="w-20 sm:w-32 overflow-hidden whitespace-nowrap flex-shrink-1 sm:flex-shrink-0 flex items-center text-xs mr-1 sm:mr-2 min-w-0">
    <span class="text-amber-600">summoning @{@outershell.resp}'s code â˜„</span>
  </div>
  <!-- Empty spacer div with minimum width on small screens -->


  <!-- Command buttons always aligned to right and given prio -->
  <div class="flex flex-shrink-0 ml-auto cursor-pointer pointer-events-auto">
          <button class="relative w-8 h-8 border-2 border-brand/50 shadow-xl backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-brand active:border-amber-500 touch-manipulation">
            <.share class="w-5 h-5 sm:w-3 sm:h-3 fill-brand/50 text-amber-400"/>
          </button>

          <button class="relative w-8 h-8 border-2 border-brand/50 shadow-xl  backdrop-blur-sm transform transition-all duration-300 hover:scale-110 hover:rotate-[15deg] disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:rotate-0 sm:w-6 sm:h-6 mx-0.5 rounded-sm flex items-center justify-center hover:fill-brand active:border-amber-500 touch-manipulation" phx-click="flipDeck">
            <.manual class="w-5 h-5 transition-transform duration-700 rotate-[-60deg] fill-amber-400 text-amber-400/50 hover:rotate-[-40deg]"/>
          </button>

        </div>
        <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-amber-500"></div>
        <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-amber-500">
        </div>
        <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-amber-500">
        </div>
        <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-amber-500">
        </div>
      </div>
    </div>
  </div>

  <span
      id="outershell-head"
    :if={@outershell && @outershell.resp}
    class="fixed text-lg font-bold w-1/3 right-2 text-amber-200 top-36"
  >
    @{@outershell.resp}'s code
    </span>
  <div
    :if={@outershell}
    id="outerenv"
    phx-update="ignore"
    class="fixed w-1/3 overflow-y-scroll border rounded-lg pointer-events-auto h-1/2 top-32 right-4 bottom-4 bg-amber-300/20 border-amber-600/20 dark-scrollbar"
  >

    <button
      phx-click="seeTurtle"
      class="absolute z-10 flex items-center justify-center w-8 h-8 transition-all duration-300 transform border-2 rounded-full shadow-xl opacity-50 pointer-events-auto backdrop-blur-sm hover:scale-110 hover:bg-red-900/90 group hover:opacity-100 top-4 right-4  border-amber-600"
    >
      <!-- Base Crosshair -->
      <div class="absolute inset-0 flex items-center justify-center">
        <svg
          class="w-5 h-5 transition-colors text-red-600 group-hover:text-amber-300"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </div>
      <!-- Mechanical Cross Overlay -->
      <svg
        class="absolute inset-0 w-full h-full transition-opacity text-amber-600 opacity-30 group-hover:opacity-50"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="1"
      >
        <path d="M12 2v20M2 12h20" />
        <circle cx="12" cy="12" r="10" />
        <path d="M12 7v10M7 12h10" stroke-dasharray="2 2" />
      </svg>
    </button>
    <div class="mt-12 mb-8 w-full overflow-auto font-mono  bg-transparent resize-none backdrop-blur-sm h-11/12 focus:outline-none">
      <textarea phx-update="ignore" id="outershell" phx-hook="OuterShell"></textarea>
    </div>
  </div>

  <.command_deck :if={@right == :deck}/>
  <.memory_well :if={@right == :well} view="grid" memories={@disciples |> Enum.map(&(elem(&1,1)))} page={1} total_pages={1}/>
</div>

<%!-- Turtle viewing pane toggle icon --%>
<div
  id="paneflip"
  class="fixed z-50 -translate-x-1/2  transition-transform duration-300 pointer-events-auto bottom-2 left-1/2"
  phx-hook="Sensei"
>
  <svg
    class={"z-[60] w-6 h-6 text-brand/50 items-center flex  m-auto  rounded-lg shadow-xl backdrop-blur-sm transform transition-transform duration-300 hover:text-amber-400 cursor-pointer" <> if(@pane, do: " rotate-180", else: "")}
    phx-click="flipPane"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
  >
    <path d="M18 15l-6-6-6 6" />
  </svg>
</div>
<%!-- Turtle viewing pane --%>
<div class="fixed bottom-0 z-40 flex w-3/5 p-4 m-4 overflow-x-scroll transform -translate-x-1/2 rounded-md left-1/2 dark-scrollbar touch-pan-x overscroll-auto">
  <!-- Other people's turtles -->
  <div
    :for={{phx_ref, dis} <- @disciples |> Enum.sort_by(&elem(&1, 1).online_at, :desc)}
    :if={Map.has_key?(dis, :meta) && @pane}
    class={"rounded-lg transition mx-11 pb-4 pt-2 duration-200 ease-in-out flex-shrink-0 w-1/6" <> is_main_focus(dis.phx_ref, @focused_phx_ref)}
  >
    <.icon
      :if={@sensei}
      name="hero-cursor-arrow-ripple"
      phx-click="toggle-focus"
      phx-value-disciple-phx_ref={phx_ref}
      class="cursor-pointer pointer-events-auto text-brand"
    />
    <div
      phx-click="seeTurtle"
      phx-throttle="1000"
      phx-value-addr={phx_ref}
      class={[
        "relative flex justify-center h-32 lg:w-48 w-32 border pointer-events-auto rounded-md cursor-alias hover:scale-120 hover:border-2",
        @outershell && @outershell.addr == phx_ref && "border-orange-500"
      ]}
    >
      <div class="absolute font-mono text-sm tracking-wider rotate-0 select-none top-2 right-2 text-amber-500/50">
        {dis.name}
      </div>

      <img src={dis.meta.path} onerror="this.src='/images/turtlehead.png';" class="object-scale-down max-h-full m-auto" />
    </div>
  </div>

  <div :if={@sensei} class="z-50 flex mb-2 pointer-events-auto">
    <.export />
  </div>
</div>

<style>
  /* Custom styles for editor width */
  #editor {
  width: 80ch; /* 80 characters width */
  }
</style>
